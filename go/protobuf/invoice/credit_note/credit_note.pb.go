// Code generated by protoc-gen-go. DO NOT EDIT.
// source: protobuf/invoice/credit_note/credit_note.proto

package creditnote

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type MigrateCreditNotesInput struct {
	FromDate             string   `protobuf:"bytes,1,opt,name=from_date,json=fromDate,proto3" json:"from_date,omitempty"`
	ToDate               string   `protobuf:"bytes,2,opt,name=to_date,json=toDate,proto3" json:"to_date,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MigrateCreditNotesInput) Reset()         { *m = MigrateCreditNotesInput{} }
func (m *MigrateCreditNotesInput) String() string { return proto.CompactTextString(m) }
func (*MigrateCreditNotesInput) ProtoMessage()    {}
func (*MigrateCreditNotesInput) Descriptor() ([]byte, []int) {
	return fileDescriptor_b27d851cd15ddc40, []int{0}
}

func (m *MigrateCreditNotesInput) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MigrateCreditNotesInput.Unmarshal(m, b)
}
func (m *MigrateCreditNotesInput) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MigrateCreditNotesInput.Marshal(b, m, deterministic)
}
func (m *MigrateCreditNotesInput) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MigrateCreditNotesInput.Merge(m, src)
}
func (m *MigrateCreditNotesInput) XXX_Size() int {
	return xxx_messageInfo_MigrateCreditNotesInput.Size(m)
}
func (m *MigrateCreditNotesInput) XXX_DiscardUnknown() {
	xxx_messageInfo_MigrateCreditNotesInput.DiscardUnknown(m)
}

var xxx_messageInfo_MigrateCreditNotesInput proto.InternalMessageInfo

func (m *MigrateCreditNotesInput) GetFromDate() string {
	if m != nil {
		return m.FromDate
	}
	return ""
}

func (m *MigrateCreditNotesInput) GetToDate() string {
	if m != nil {
		return m.ToDate
	}
	return ""
}

type CreditNoteOutput struct {
	CreditNoteId         string   `protobuf:"bytes,1,opt,name=credit_note_id,json=creditNoteId,proto3" json:"credit_note_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreditNoteOutput) Reset()         { *m = CreditNoteOutput{} }
func (m *CreditNoteOutput) String() string { return proto.CompactTextString(m) }
func (*CreditNoteOutput) ProtoMessage()    {}
func (*CreditNoteOutput) Descriptor() ([]byte, []int) {
	return fileDescriptor_b27d851cd15ddc40, []int{1}
}

func (m *CreditNoteOutput) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreditNoteOutput.Unmarshal(m, b)
}
func (m *CreditNoteOutput) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreditNoteOutput.Marshal(b, m, deterministic)
}
func (m *CreditNoteOutput) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreditNoteOutput.Merge(m, src)
}
func (m *CreditNoteOutput) XXX_Size() int {
	return xxx_messageInfo_CreditNoteOutput.Size(m)
}
func (m *CreditNoteOutput) XXX_DiscardUnknown() {
	xxx_messageInfo_CreditNoteOutput.DiscardUnknown(m)
}

var xxx_messageInfo_CreditNoteOutput proto.InternalMessageInfo

func (m *CreditNoteOutput) GetCreditNoteId() string {
	if m != nil {
		return m.CreditNoteId
	}
	return ""
}

type CreditNoteInput struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	DueDate              string   `protobuf:"bytes,2,opt,name=due_date,json=dueDate,proto3" json:"due_date,omitempty"`
	Number               string   `protobuf:"bytes,3,opt,name=number,proto3" json:"number,omitempty"`
	CustomerId           string   `protobuf:"bytes,4,opt,name=customer_id,json=customerId,proto3" json:"customer_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreditNoteInput) Reset()         { *m = CreditNoteInput{} }
func (m *CreditNoteInput) String() string { return proto.CompactTextString(m) }
func (*CreditNoteInput) ProtoMessage()    {}
func (*CreditNoteInput) Descriptor() ([]byte, []int) {
	return fileDescriptor_b27d851cd15ddc40, []int{2}
}

func (m *CreditNoteInput) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreditNoteInput.Unmarshal(m, b)
}
func (m *CreditNoteInput) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreditNoteInput.Marshal(b, m, deterministic)
}
func (m *CreditNoteInput) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreditNoteInput.Merge(m, src)
}
func (m *CreditNoteInput) XXX_Size() int {
	return xxx_messageInfo_CreditNoteInput.Size(m)
}
func (m *CreditNoteInput) XXX_DiscardUnknown() {
	xxx_messageInfo_CreditNoteInput.DiscardUnknown(m)
}

var xxx_messageInfo_CreditNoteInput proto.InternalMessageInfo

func (m *CreditNoteInput) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *CreditNoteInput) GetDueDate() string {
	if m != nil {
		return m.DueDate
	}
	return ""
}

func (m *CreditNoteInput) GetNumber() string {
	if m != nil {
		return m.Number
	}
	return ""
}

func (m *CreditNoteInput) GetCustomerId() string {
	if m != nil {
		return m.CustomerId
	}
	return ""
}

func init() {
	proto.RegisterType((*MigrateCreditNotesInput)(nil), "bernardosecades.invoice.creditnote.MigrateCreditNotesInput")
	proto.RegisterType((*CreditNoteOutput)(nil), "bernardosecades.invoice.creditnote.CreditNoteOutput")
	proto.RegisterType((*CreditNoteInput)(nil), "bernardosecades.invoice.creditnote.CreditNoteInput")
}

func init() {
	proto.RegisterFile("protobuf/invoice/credit_note/credit_note.proto", fileDescriptor_b27d851cd15ddc40)
}

var fileDescriptor_b27d851cd15ddc40 = []byte{
	// 320 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x52, 0x4f, 0x4f, 0xfa, 0x40,
	0x10, 0x0d, 0xfc, 0x7e, 0x29, 0x30, 0x12, 0xd4, 0x3d, 0x00, 0xc2, 0x41, 0xd3, 0x78, 0xf0, 0xb4,
	0x24, 0xe2, 0xc1, 0xc4, 0x9b, 0xe8, 0x81, 0x83, 0x92, 0xe8, 0xcd, 0x0b, 0x69, 0xbb, 0x03, 0xd9,
	0xc4, 0x76, 0xc8, 0x76, 0x96, 0xc4, 0xcf, 0xed, 0x17, 0x30, 0xdb, 0xad, 0x2d, 0x6a, 0x8c, 0x7a,
	0x6b, 0xe7, 0xfd, 0x99, 0x97, 0x79, 0x0b, 0x72, 0x63, 0x88, 0x29, 0xb6, 0xab, 0x89, 0xce, 0xb6,
	0xa4, 0x13, 0x9c, 0x24, 0x06, 0x95, 0xe6, 0x65, 0x46, 0xfc, 0xe1, 0xdb, 0x13, 0x45, 0x18, 0xa3,
	0xc9, 0x22, 0xa3, 0x28, 0xc7, 0x24, 0x52, 0x98, 0xcb, 0x52, 0x26, 0x3d, 0xd5, 0x31, 0x47, 0xe3,
	0x35, 0xd1, 0xfa, 0x19, 0x27, 0x95, 0x35, 0xa6, 0x1b, 0x7e, 0xf1, 0x06, 0xe1, 0x02, 0x06, 0x77,
	0x7a, 0x6d, 0x22, 0xc6, 0x59, 0xa1, 0xb8, 0x27, 0xc6, 0x7c, 0x9e, 0x6d, 0x2c, 0x8b, 0x31, 0x74,
	0x56, 0x86, 0xd2, 0xa5, 0x8a, 0x18, 0x87, 0x8d, 0x93, 0xc6, 0x59, 0xe7, 0xa1, 0xed, 0x06, 0x37,
	0x11, 0xa3, 0x18, 0x40, 0x8b, 0xc9, 0x43, 0xcd, 0x02, 0x0a, 0x98, 0x1c, 0x10, 0x5e, 0xc2, 0x41,
	0xed, 0xb4, 0xb0, 0xec, 0x9c, 0x4e, 0xa1, 0xb7, 0x13, 0x7d, 0xa9, 0x55, 0x69, 0xd7, 0x4d, 0x2a,
	0xe6, 0x5c, 0x85, 0x16, 0xf6, 0x6b, 0xa5, 0x8f, 0xd0, 0x83, 0x66, 0x45, 0x6e, 0x6a, 0x25, 0x8e,
	0xa0, 0xad, 0x2c, 0xee, 0xae, 0x6d, 0x29, 0x8b, 0x45, 0xa0, 0x3e, 0x04, 0x99, 0x4d, 0x63, 0x34,
	0xc3, 0x7f, 0x3e, 0x8f, 0xff, 0x13, 0xc7, 0xb0, 0x97, 0xd8, 0x9c, 0x29, 0x45, 0xe3, 0x16, 0xff,
	0x2f, 0x40, 0x78, 0x1f, 0xcd, 0xd5, 0xf9, 0x6b, 0x03, 0x0e, 0xeb, 0xbd, 0x8f, 0x68, 0xb6, 0x3a,
	0x41, 0x91, 0x43, 0x30, 0x33, 0xe8, 0x8c, 0xa7, 0xf2, 0xe7, 0x1b, 0xcb, 0x4f, 0xc1, 0x47, 0x17,
	0x7f, 0x13, 0x95, 0x77, 0xd2, 0x20, 0xbe, 0x96, 0x21, 0xae, 0x7e, 0xe3, 0xf5, 0x4d, 0x89, 0xa3,
	0xbe, 0xf4, 0xed, 0x57, 0x0f, 0x4b, 0xde, 0xba, 0xf6, 0xaf, 0xbb, 0x4f, 0x50, 0xab, 0xe3, 0xa0,
	0x40, 0xa7, 0x6f, 0x01, 0x00, 0x00, 0xff, 0xff, 0x8a, 0x5a, 0xaf, 0x4a, 0x7f, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// CreditNoteServiceClient is the client API for CreditNoteService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CreditNoteServiceClient interface {
	Create(ctx context.Context, in *CreditNoteInput, opts ...grpc.CallOption) (*CreditNoteOutput, error)
	MigrateCreditNotes(ctx context.Context, in *MigrateCreditNotesInput, opts ...grpc.CallOption) (*empty.Empty, error)
}

type creditNoteServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewCreditNoteServiceClient(cc grpc.ClientConnInterface) CreditNoteServiceClient {
	return &creditNoteServiceClient{cc}
}

func (c *creditNoteServiceClient) Create(ctx context.Context, in *CreditNoteInput, opts ...grpc.CallOption) (*CreditNoteOutput, error) {
	out := new(CreditNoteOutput)
	err := c.cc.Invoke(ctx, "/bernardosecades.invoice.creditnote.CreditNoteService/Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *creditNoteServiceClient) MigrateCreditNotes(ctx context.Context, in *MigrateCreditNotesInput, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/bernardosecades.invoice.creditnote.CreditNoteService/MigrateCreditNotes", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CreditNoteServiceServer is the server API for CreditNoteService service.
type CreditNoteServiceServer interface {
	Create(context.Context, *CreditNoteInput) (*CreditNoteOutput, error)
	MigrateCreditNotes(context.Context, *MigrateCreditNotesInput) (*empty.Empty, error)
}

// UnimplementedCreditNoteServiceServer can be embedded to have forward compatible implementations.
type UnimplementedCreditNoteServiceServer struct {
}

func (*UnimplementedCreditNoteServiceServer) Create(ctx context.Context, req *CreditNoteInput) (*CreditNoteOutput, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Create not implemented")
}
func (*UnimplementedCreditNoteServiceServer) MigrateCreditNotes(ctx context.Context, req *MigrateCreditNotesInput) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MigrateCreditNotes not implemented")
}

func RegisterCreditNoteServiceServer(s *grpc.Server, srv CreditNoteServiceServer) {
	s.RegisterService(&_CreditNoteService_serviceDesc, srv)
}

func _CreditNoteService_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreditNoteInput)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CreditNoteServiceServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bernardosecades.invoice.creditnote.CreditNoteService/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CreditNoteServiceServer).Create(ctx, req.(*CreditNoteInput))
	}
	return interceptor(ctx, in, info, handler)
}

func _CreditNoteService_MigrateCreditNotes_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MigrateCreditNotesInput)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CreditNoteServiceServer).MigrateCreditNotes(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bernardosecades.invoice.creditnote.CreditNoteService/MigrateCreditNotes",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CreditNoteServiceServer).MigrateCreditNotes(ctx, req.(*MigrateCreditNotesInput))
	}
	return interceptor(ctx, in, info, handler)
}

var _CreditNoteService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "bernardosecades.invoice.creditnote.CreditNoteService",
	HandlerType: (*CreditNoteServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Create",
			Handler:    _CreditNoteService_Create_Handler,
		},
		{
			MethodName: "MigrateCreditNotes",
			Handler:    _CreditNoteService_MigrateCreditNotes_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "protobuf/invoice/credit_note/credit_note.proto",
}
